import os

#Source files
engine_src = Glob("engine/*.cc", strings=True)
char_src = Glob("characters/*.cc", strings=True)
backend_src = engine_src + char_src
bmpout_src = "bmp.cc"
gufg_src = "game.cc"

#Common flags and libraries
flags = ["-O2", "-g", "-std=c++11", "-Wno-overloaded-virtual",
         "-Wno-format", "-Wno-format-contains-null", "-Wctor-dtor-privacy"]
libs = ['SDL','SDLmain','SDL_image','SDL_mixer', 'glut']

#Linux-specific environment, code objects, and programs
linux = Environment(LIBS=libs+['GL', 'GLU'],
                    CXXFLAGS=flags)
l = '-linux.o'
linux_backend = [linux.Object(name+l, name) for name in backend_src]
linux_bmpout = linux.Object(bmpout_src+l, bmpout_src)
linux_gufg = linux.Object(gufg_src+l, gufg_src)
linux.Program('../bmpout', linux_backend + linux_bmpout)
linux.Program('../gufg', linux_backend + linux_gufg)

#Windows-specific environment, code objects, and programs
wpath = '/usr/x86_64-w64-mingw32/sys-root/mingw/'
wcpppath = wpath+'include/'
wlibpath = wpath+'lib/'
windows = Environment(ENV=os.environ,
                      CPPPATH=wcpppath,
                      CXX="x86_64-w64-mingw32-gcc",
                      LD="/usr/x86_64-w64-mingw32/bin/ld",
                      LIBS=libs+['mingw32', 'opengl32', 'glu32'],
                      LIBPATH=wlibpath)
w = '-windows.o'
windows_backend = [windows.Object(name+w, name, CXXFLAGS=flags)\
                   for name in backend_src]
windows_bmpout = windows.Object(bmpout_src+w, bmpout_src, CXXFLAGS=flags)
windows_gufg = windows.Object(gufg_src+w, gufg_src, CXXFLAGS=flags)
windows.Program('../bmpout-win', windows_backend + windows_bmpout)
windows.Program('../gufg-win', windows_backend + windows_gufg)

#Build only linux version by default
Default("../gufg")
