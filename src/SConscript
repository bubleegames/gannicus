import os

#Source files
engine_src = Glob("engine/*.cc", strings=True)
char_src = Glob("characters/*.cc", strings=True)
backend_src = engine_src + char_src
bmpout_src = "bmp.cc"
gufg_src = "game.cc"

#Common flags and libraries
flags = ["-O2", "-g", "-std=c++11", "-Wno-overloaded-virtual",
         "-Wno-format", "-Wno-format-contains-null", "-Wctor-dtor-privacy"]
libs = ['SDL','SDLmain','SDL_image','SDL_mixer',
        'GL', 'GLU', 'glut']

#Linux-specific environment and code objects
linux = Environment(CXXFLAGS=flags, LIBS=libs)
l = '-linux.o'
linux_backend = [linux.Object(name+l, name) for name in backend_src]
linux_gufg = linux.Object(gufg_src+l, gufg_src)
linux_bmpout = linux.Object(bmpout_src+l, bmpout_src)
linux.Program('../bmpout', linux_backend + linux_bmpout)
linux.Program('../gufg', linux_backend + linux_gufg)


#windows = Environment(ENV=os.environ)
#Tool('mingw')(windows)
#windows.MergeFlags('-mwindows')
#libpath = ['/usr/x86_64-w64-mingw32/sys-root/mingw/lib/']
#windows.Program('../bmpout-win', backend_src + bmpout_src,
#                     LIBS=libs, LIBPATH=libpath, CXXFLAGS=flags)
#windows.Program('../gufg-win',backend_src + gufg_exec_src,
#                     LIBS=libs, LIBPATH=libpath, CXXFLAGS=flags)

Default("../gufg")
